{"version":3,"sources":["webpack:///./resources/js/mixins/address-mixin.ts","webpack:///./resources/js/pages/user-ctrl.ts","webpack:///./resources/js/pages/order-ctrl.ts"],"names":["saveAddressNative","self","update","param","error","Object","assign","this","resetFormObj","method","uri","address","id","form","withTrans","res","status","hasErrors","data","errors","validateData","addressChecked","test","userMail","userId","phoneNumber","f","firstName","length","lastName","country","city","postCode","dep","gov","notes","AddressMixin","d","cart","items","loaders","wish","count","total","cartLoader","wishLoader","q","scrollTop","orderId","creating","profile","img","prev","hasErr","uploading","completing","openItemsModal","JSON","parse","modal","document","getElementById","Modal","show","createAddress","close","hide","saveAddress","console","log","then","location","reload","createAddressElem","querySelector","classList","add","editAddress","deleteAddress","addId","loader","contains","showLoader","delete","hideLoader","validateOnChange","previewImg","ev","inp","target","files","reader","FileReader","onload","e","result","readAsDataURL","uploadImage","FormData","append","post","headers","success","updateBgImage","deleteRate","rid","spinner","rate","parentElement","remove","selector","imgUrl","el","style","backgroundImage","parent","createElement","child","innerHTML","prepend","completeOrder","btn","updated","beforeMount","attachToGlobal","UserCtrl","FormInpts","EmptyOrder","orderNum","user_id","address_id","qty","paymentMethod","paymentStatus","continue","order","updaingOrder","orderSuccess","addresses","addressesLoader","loadingAdresses","emptyAddressList","addingAddress","showForm","pageInx","deletingAddress","savingOrder","addAddress","r","check","loadAddresses","get","ads","selectAddress","adr","showAddressForm","getLang","inx","findIndex","x","splice","map","obj","push","storeOrder","href","saveOrder","catch","err","enc_id","showTab","tabId","tab","Tab","height","mounted","$on","OrderCtrl"],"mappings":"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","file":"1.js","sourcesContent":["import { Vue, Component, Prop, Watch } from \"vue-property-decorator\";\r\nimport Super from \"../pages/super\";\r\nimport { OrderCtrlData } from \"../pages/order-ctrl\";\r\nimport { UserCtrlData } from \"../pages/user-ctrl\";\r\nimport AddressInterface from \"../interfaces/address\";\r\nimport Axios from 'axios';\r\n\r\n@Component\r\nexport default class AddressMixin extends Super {\r\n    public async saveAddressNative(\r\n        self: OrderCtrlData | UserCtrlData,\r\n        update: boolean = false,\r\n        param: {withTrans?: boolean} = {}\r\n    ) {\r\n        self.error = Object.assign({}, this.resetFormObj);\r\n\r\n        const method = update ? \"patch\" : \"post\";\r\n        let uri = \"/address\";\r\n        if (update) {\r\n            uri += \"/\" + self.address.id;\r\n        }\r\n        \r\n        // @ts-ignore\r\n        self.form.withTrans = param.withTrans;\r\n\r\n        const res = await Axios[method](uri, self.form);\r\n        // console.log(self.form);\r\n        // console.log(res, res.status);\r\n        if (res && res.status === 422) {\r\n            self.hasErrors = true;\r\n            self.error = res.data.errors;\r\n            // console.log(self.error);\r\n            this.error();\r\n            return null;\r\n        }\r\n\r\n        if (!res || !res.data || res.status > 204) {\r\n            this.error();\r\n            return null;\r\n        }\r\n\r\n        return res.data;\r\n    }\r\n\r\n\r\n    public validateData(self: OrderCtrlData | UserCtrlData | any) {\r\n        self.addressChecked = false;\r\n\r\n        const re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        if (!re.test(self.form.userMail) && !self.userId) {\r\n            return true;\r\n        }\r\n\r\n        if (\r\n            /!\\(([0-9]{2}|0{1}((x|[0-9]){2}[0-9]{2}))\\)\\s*[0-9]{3,4}[- ]*[0-9]{4}/.test(\r\n                self.form.phoneNumber\r\n            )\r\n        ) {\r\n            return true;\r\n        }\r\n\r\n        // ckeck for length\r\n        const f = self.form;\r\n        const len =\r\n            f.firstName.length ||\r\n            f.lastName.length ||\r\n            f.address.length ||\r\n            f.country.length ||\r\n            f.city.length ||\r\n            f.postCode.length ||\r\n            f.phoneNumber.length;\r\n        if (!len) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    get resetFormObj(): AddressInterface {\r\n        return Object.assign({}, {\r\n            id: 0,\r\n            userMail: \"\",\r\n            firstName: \"\",\r\n            lastName: \"\",\r\n            address: \"\",\r\n            dep: \"\",\r\n            city: \"\",\r\n            country: \"\",\r\n            gov: \"\",\r\n            postCode: \"\",\r\n            phoneNumber: \"\",\r\n            notes: \"\"\r\n        });\r\n    }\r\n}\r\n","import { Component, Mixins } from \"vue-property-decorator\";\r\nimport Super from \"./super\";\r\nimport CartInterface from \"../interfaces/cart\";\r\nimport CartItemInterface from \"../interfaces/cart-item\";\r\nimport Axios from \"axios\";\r\nimport AddressInterface from \"../interfaces/address\";\r\nimport { FormInpts } from \"./order-ctrl\";\r\nimport AddressMixin from \"../mixins/address-mixin\";\r\nimport { addListener } from \"cluster\";\r\n\r\nexport interface UserCtrlData {\r\n    cart: CartInterface;\r\n    cartLoader: boolean;\r\n    wishLoader: boolean;\r\n    q: string;\r\n    userId: number;\r\n    scrollTop: number;\r\n    items: CartItemInterface[];\r\n    orderId: string;\r\n    creating: boolean;\r\n    form: AddressInterface;\r\n    error: AddressInterface;\r\n    address: AddressInterface;\r\n    hasErrors: boolean;\r\n    addressChecked: boolean;\r\n    profile: {\r\n        img: HTMLInputElement;\r\n        prev: string;\r\n        hasErr: boolean;\r\n        errors: {\r\n            img: string[];\r\n        };\r\n        uploading: boolean;\r\n    };\r\n    completing: boolean;\r\n}\r\n\r\n@Component\r\nexport default class UserCtrl extends Mixins(AddressMixin) {\r\n    public d: UserCtrlData = {\r\n        cart: {\r\n            items: [],\r\n            // @ts-ignore\r\n            loaders: [1, 2, 3, 4],\r\n            wish: [],\r\n            count: 0,\r\n            total: 0\r\n        },\r\n        cartLoader: true,\r\n        wishLoader: true,\r\n        q: \"\",\r\n        userId: 0,\r\n        scrollTop: 0,\r\n        items: [],\r\n        orderId: \"\",\r\n        creating: false,\r\n        form: FormInpts,\r\n        error: FormInpts,\r\n        address: FormInpts,\r\n        hasErrors: false,\r\n        addressChecked: false,\r\n        profile: {\r\n            // @ts-ignore\r\n            img: {},\r\n            prev: \"\",\r\n            hasErr: false,\r\n            errors: { img: [] },\r\n            uploading: false\r\n        },\r\n        completing: false\r\n    };\r\n\r\n    public openItemsModal(data: string, orderId: string) {\r\n        this.d.items = [...JSON.parse(data || \"[]\")];\r\n        // console.log(JSON.parse(data || \"[]\"));\r\n        this.d.orderId = orderId;\r\n        const modal = document.getElementById(\"items-modal\") as HTMLDivElement;\r\n        if (modal) {\r\n            // @ts-ignore\r\n            new Modal(modal).show();\r\n        }\r\n    }\r\n\r\n    public createAddress(close: boolean = false, update: boolean = false) {\r\n        // console.log('asdasdasd');\r\n        const modal = document.getElementById(\r\n            \"address-form-modal\"\r\n        ) as HTMLDivElement;\r\n        this.d.form = update ? this.d.address : this.resetFormObj;\r\n        this.d.error = this.resetFormObj;\r\n        // console.log(modal);\r\n        if (modal) {\r\n            if (close) {\r\n                // @ts-ignore\r\n                return new Modal(modal).hide();\r\n            }\r\n            // @ts-ignore\r\n            new Modal(modal).show();\r\n        }\r\n    }\r\n\r\n    public saveAddress() {\r\n        this.d.hasErrors = this.validateData(this.d);\r\n        if (this.d.creating || this.d.hasErrors) {\r\n            return;\r\n        }\r\n        console.log(this.d.address);\r\n        const update = (this.d.address.id as number) > 0;\r\n        this.d.creating = true;\r\n        this.saveAddressNative(this.d, update, { withTrans: true }).then(\r\n            res => {\r\n                if (\r\n                    !res ||\r\n                    (!update && !res.address) ||\r\n                    (update && res.address)\r\n                ) {\r\n                    this.d.creating = false;\r\n                    this.error();\r\n                    return;\r\n                }\r\n\r\n                if (!update) {\r\n                    this.createAddressElem(res);\r\n                } else {\r\n                    location.reload();\r\n                }\r\n\r\n                this.createAddress(true);\r\n                this.d.address = this.resetFormObj;\r\n                this.d.creating = false;\r\n                this.d.form = this.resetFormObj;\r\n                (document.querySelector(\r\n                    \"#emptyMess\"\r\n                ) as HTMLDivElement).classList.add(\"d-none\");\r\n            }\r\n        );\r\n    }\r\n\r\n    public editAddress(data: string) {\r\n        // this.d.address = this.resetFormObj;\r\n        this.d.address = JSON.parse(data || \"{}\");\r\n        this.createAddress(false, true);\r\n    }\r\n\r\n    public deleteAddress(addId: number) {\r\n        const loader = document.querySelector(\r\n            `#spinnerDelete${addId}`\r\n        ) as HTMLDivElement;\r\n        if (loader && !loader.classList.contains(\"d-none\")) {\r\n            return;\r\n        }\r\n        this.showLoader(`spinnerDelete${addId}`);\r\n        Axios.delete(`/address/${addId}`).then(res => {\r\n            if (!res || res.status !== 204) {\r\n                this.error();\r\n                this.hideLoader(`spinnerDelete${addId}`);\r\n                return;\r\n            }\r\n\r\n            this.hideLoader(`address${addId}`);\r\n            this.hideLoader(`spinnerDelete${addId}`);\r\n        });\r\n    }\r\n\r\n    public validateOnChange() {\r\n        this.d.hasErrors = this.validateData(this.d);\r\n    }\r\n\r\n    public previewImg(ev) {\r\n        const inp: HTMLInputElement = ev.target;\r\n        if (!inp.files || !inp.files[0]) {\r\n            this.d.profile.prev = \"\";\r\n            return;\r\n        }\r\n        this.d.profile.img = inp;\r\n\r\n        const reader = new FileReader();\r\n\r\n        reader.onload = e => {\r\n            this.d.profile.prev = (e.target as any).result;\r\n        };\r\n\r\n        reader.readAsDataURL((inp.files as FileList)[0]);\r\n    }\r\n\r\n    public uploadImage() {\r\n        if (\r\n            this.d.profile.uploading ||\r\n            !this.d.profile.img?.files ||\r\n            !this.d.profile.img?.files[0]\r\n        ) {\r\n            // return;\r\n        }\r\n        this.d.profile.uploading = true;\r\n        const form = new FormData();\r\n        form.append(\"img\", (this.d.profile.img.files as FileList)[0]);\r\n\r\n        Axios.post(\"/user/profile/image\", form, {\r\n            headers: {\r\n                \"Content-Type\": \"multipart/form-data\"\r\n            }\r\n        }).then(res => {\r\n            if (!res || !res.data) {\r\n                this.error();\r\n                this.d.profile.uploading = false;\r\n                return;\r\n            }\r\n\r\n            if (res.status === 422) {\r\n                this.d.profile.hasErr = true;\r\n                this.d.profile.errors.img = res.data.errors.img;\r\n                this.d.profile.uploading = false;\r\n                return;\r\n            }\r\n\r\n            this.d.profile.uploading = false;\r\n            this.success();\r\n            this.d.profile.prev = \"\";\r\n            // @ts-ignore\r\n            this.d.profile.img = {};\r\n            this.updateBgImage(\".nav-right .x-pimg\", res.data.img);\r\n            this.updateBgImage(\".navbar .x-pimg\", res.data.img);\r\n            this.updateBgImage(\".sidebar .x-pimg\", res.data.img);\r\n        });\r\n    }\r\n\r\n    public deleteRate(rid: number) {\r\n        const spinner = document.getElementById(\r\n            `spinner${rid}`\r\n        ) as HTMLDivElement;\r\n        const rate = document.getElementById(`rateid${rid}`) as HTMLDivElement;\r\n        if (\r\n            (spinner.parentElement as HTMLElement).classList.contains(\r\n                \"disabled\"\r\n            )\r\n        ) {\r\n            // return;\r\n        }\r\n        (spinner.parentElement as HTMLElement).classList.add(\"disabled\");\r\n        spinner.classList.remove(\"d-none\");\r\n\r\n        Axios.delete(`/rates/${rid}`).then(res => {\r\n            if (!res || res.status !== 204) {\r\n                this.error();\r\n                (spinner.parentElement as HTMLElement).classList.remove(\r\n                    \"disabled\"\r\n                );\r\n                spinner.classList.add(\"d-none\");\r\n                return;\r\n            }\r\n\r\n            (spinner.parentElement as HTMLElement).classList.remove(\"disabled\");\r\n            spinner.classList.add(\"d-none\");\r\n            this.success();\r\n            // remove rate element\r\n            (rate.parentElement as HTMLElement).classList.add(\"d-none\");\r\n        });\r\n    }\r\n\r\n    private updateBgImage(selector: string, imgUrl: string) {\r\n        const el = document.querySelector(selector) as HTMLDivElement;\r\n        if (el) {\r\n            el.style.backgroundImage = `url(/${imgUrl})`;\r\n        }\r\n    }\r\n\r\n    private createAddressElem(address: AddressInterface) {\r\n        const parent = document.createElement(\"div\") as HTMLDivElement;\r\n        parent.id = `address${address.id}`;\r\n        parent.classList.add(\"col-md-6\", \"mb-3\");\r\n        const child = document.createElement(\"address\");\r\n        child.innerHTML = `<div class='card card-body'><h5>${\r\n            address.firstName\r\n        } ${address.lastName}</h5> (${\r\n            typeof address.dep === \"number\" ? address.dep : \"\"\r\n        }) ${address.address} ${address.city}<br> <strong>${address.gov}, ${\r\n            address.country\r\n        }</strong><br>\r\n        <a class=\"mt-2\" href=\"tel:${address.phoneNumber}\">\r\n    <i class=\"fas fa-phone-alt mx-1\"></i>\r\n    ${address.phoneNumber}\r\n</a></div>`;\r\n        parent.append(child);\r\n        const addressList = document.querySelector(\r\n            `#address-list-row`\r\n        ) as HTMLDivElement;\r\n        // parent.setAttribute('v-on:click', 'h.d.sdwsdsa()');\r\n        addressList.prepend(parent);\r\n        // this.$forceUpdate();\r\n    }\r\n\r\n    private showLoader(id: string) {\r\n        const loader = document.querySelector(`#${id}`) as HTMLDivElement;\r\n        if (loader) {\r\n            loader.classList.remove(\"d-none\");\r\n        }\r\n    }\r\n\r\n    private hideLoader(id: string) {\r\n        const loader = document.querySelector(`#${id}`) as HTMLDivElement;\r\n        if (loader) {\r\n            loader.classList.add(\"d-none\");\r\n        }\r\n    }\r\n\r\n    public completeOrder(id: string) {\r\n        const spinner = document.querySelector(\r\n            `#spinord${id}`\r\n        ) as HTMLDivElement;\r\n        const btn = spinner.parentElement as HTMLElement;\r\n        if (!spinner.classList.contains(\"d-none\")) {\r\n            return;\r\n        }\r\n        btn.classList.add(\"disabled\");\r\n        spinner.classList.remove(\"d-none\");\r\n\r\n        Axios.post(`/track/${id}/complete`).then(res => {\r\n            if (!res || !res.data || !res.data.updated) {\r\n                this.error();\r\n                btn.classList.remove(\"disabled\");\r\n                spinner.classList.add(\"d-none\");\r\n                return;\r\n            }\r\n\r\n            btn.classList.remove(\"disabled\");\r\n            spinner.classList.add(\"d-none\");\r\n            this.success();\r\n            btn.classList.add(\"d-none\");\r\n        });\r\n    }\r\n\r\n    get resetFormObj(): AddressInterface {\r\n        return {\r\n            id: 0,\r\n            userMail: \"\",\r\n            firstName: \"\",\r\n            lastName: \"\",\r\n            address: \"\",\r\n            dep: \"\",\r\n            city: \"\",\r\n            country: \"\",\r\n            gov: \"\",\r\n            postCode: \"\",\r\n            phoneNumber: \"\",\r\n            notes: \"\"\r\n        };\r\n    }\r\n\r\n    beforeMount() {\r\n        this.attachToGlobal(this, [\r\n            \"openItemsModal\",\r\n            \"editAddress\",\r\n            \"deleteAddress\",\r\n            \"createAddress\",\r\n            \"saveAddress\",\r\n            \"validateOnChange\",\r\n            \"previewImg\",\r\n            \"uploadImage\",\r\n            \"deleteRate\",\r\n            \"completeOrder\"\r\n        ]);\r\n    }\r\n}\r\n","import { Component, Mixins } from \"vue-property-decorator\";\r\nimport Super from \"./super\";\r\nimport CartInterface from \"../interfaces/cart\";\r\nimport CartItemInterface from \"../interfaces/cart-item\";\r\nimport ProductInterface from \"../interfaces/product\";\r\nimport Axios from \"axios\";\r\nimport AddressInterface from \"../interfaces/address\";\r\nimport OrderInterface from \"../interfaces/order\";\r\nimport AddressMixin from \"../mixins/address-mixin\";\r\n\r\nexport interface Form {\r\n    id?: number;\r\n    userMail: string;\r\n    firstName: string;\r\n    lastName: string;\r\n    address: string;\r\n    dep: string;\r\n    city: string;\r\n    country: string;\r\n    gov: string;\r\n    postCode: string;\r\n    phoneNumber: string;\r\n    notes: string;\r\n    check?: boolean;\r\n}\r\n\r\nexport const FormInpts: AddressInterface = {\r\n    id: 0,\r\n    userMail: \"\",\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    address: \"\",\r\n    dep: \"\",\r\n    city: \"\",\r\n    country: \"\",\r\n    gov: \"\",\r\n    postCode: \"\",\r\n    phoneNumber: \"\",\r\n    notes: \"\"\r\n};\r\n\r\nexport const EmptyOrder: OrderInterface = {\r\n    id: 0,\r\n    orderNum: \"\",\r\n    user_id: 0,\r\n    userMail: \"\",\r\n    address_id: 0,\r\n    status: \"\",\r\n    total: 0,\r\n    qty: 0,\r\n    paymentMethod: \"\",\r\n    paymentStatus: false\r\n};\r\n\r\nexport interface OrderCtrlData {\r\n    cart: CartInterface;\r\n    cartLoader: boolean;\r\n    wishLoader: boolean;\r\n    q: string;\r\n    form: Form;\r\n    error: Form;\r\n    continue: boolean;\r\n    address: AddressInterface;\r\n    order: OrderInterface;\r\n    updaingOrder: boolean;\r\n    paymentMethod: string;\r\n    orderSuccess: boolean;\r\n    userId: number;\r\n    addresses: AddressInterface[];\r\n    addressesLoader: number[];\r\n    loadingAdresses: boolean;\r\n    emptyAddressList: boolean;\r\n    addingAddress: boolean;\r\n    showForm: boolean;\r\n    pageInx: number;\r\n    scrollTop: number;\r\n    hasErrors: boolean;\r\n    deletingAddress: boolean;\r\n    savingOrder: boolean;\r\n    addressChecked: boolean;\r\n    userMail: string;\r\n}\r\n\r\n@Component\r\nexport default class OrderCtrl extends Mixins(AddressMixin) {\r\n    public d: OrderCtrlData = {\r\n        cart: {\r\n            items: [],\r\n            wish: [],\r\n            count: -5,\r\n            total: 0\r\n        },\r\n        cartLoader: true,\r\n        wishLoader: true,\r\n        q: \"\",\r\n        form: FormInpts,\r\n        error: FormInpts,\r\n        continue: false,\r\n        address: FormInpts,\r\n        order: EmptyOrder,\r\n        updaingOrder: false,\r\n        paymentMethod: \"onDelivery\",\r\n        orderSuccess: false,\r\n        userId: 0,\r\n        addresses: [],\r\n        addressesLoader: [1, 2, 3, 4],\r\n        loadingAdresses: true,\r\n        emptyAddressList: false,\r\n        addingAddress: false,\r\n        showForm: false,\r\n        pageInx: 0,\r\n        scrollTop: 0,\r\n        hasErrors: false,\r\n        deletingAddress: false,\r\n        savingOrder: false,\r\n        addressChecked: false,\r\n        userMail: '',\r\n    };\r\n\r\n    public addAddress() {\r\n        this.d.hasErrors = this.validateData(this.d);\r\n        if (this.d.continue || this.d.hasErrors || this.d.order.id) {\r\n            return;\r\n        }\r\n        this.d.continue = true;\r\n\r\n        // check if user edited old address then update\r\n        if (this.d.address.id) {\r\n            this.saveAddress(true).then(r => {\r\n                this.success();\r\n            });\r\n            return;\r\n        }\r\n\r\n        // check for address validateion\r\n        this.d.form.check = true;\r\n        this.saveAddress().then(r => {\r\n            if (r) {\r\n                this.success();\r\n            }\r\n        });\r\n\r\n        // .then(res => {\r\n        //     this.d.continue = true;\r\n        //     this.saveOrder();\r\n        // });\r\n    }\r\n\r\n    public async loadAddresses() {\r\n        this.d.loadingAdresses = true;\r\n\r\n        const res = await Axios.get(`/user/${this.d.userId}/addresses`);\r\n\r\n        if (!res || !res.data || !res.data.ads) {\r\n            this.error();\r\n            this.d.loadingAdresses = false;\r\n            return;\r\n        }\r\n\r\n        this.d.form.userMail = res.data.userMail;\r\n        this.d.userMail = res.data.userMail;\r\n\r\n        if (!res.data.ads.length) {\r\n            this.d.emptyAddressList = true;\r\n            this.d.loadingAdresses = false;\r\n            return;\r\n        }\r\n\r\n        this.d.addressesLoader = [];\r\n        this.d.addresses = res.data.ads;\r\n        this.d.error = Object.assign({}, this.resetFormObj);\r\n        this.d.loadingAdresses = false;\r\n    }\r\n\r\n    public selectAddress(adr: AddressInterface) {\r\n        // console.log('selected');\r\n        this.d.error = Object.assign({}, this.resetFormObj);\r\n        this.d.form = Object.assign({}, adr);\r\n        this.d.address = adr;\r\n        this.d.addressChecked = true;\r\n    }\r\n\r\n    public validateOnChange() {\r\n        this.d.hasErrors = this.validateData(this.d);\r\n    }\r\n\r\n    public showAddressForm() {\r\n        this.d.form = Object.assign({}, this.resetFormObj);\r\n        this.d.address = Object.assign({}, this.resetFormObj);\r\n        this.d.showForm = true;\r\n    }\r\n\r\n    public deleteAddress() {\r\n        if (this.d.deletingAddress || !this.d.address.id) {\r\n            return;\r\n        }\r\n        this.d.deletingAddress = true;\r\n\r\n        Axios.delete(`/address/${this.d.address.id}`).then(res => {\r\n            if (!res || res.status !== 204) {\r\n                this.error(this.getLang(1), this.getLang(13));\r\n                this.d.deletingAddress = false;\r\n                return;\r\n            }\r\n\r\n            const inx = this.d.addresses.findIndex(\r\n                x => x.id === this.d.address.id\r\n            );\r\n            this.d.addresses.splice(inx, 1);\r\n            this.success();\r\n            this.d.deletingAddress = false;\r\n        });\r\n    }\r\n\r\n    public async saveAddress(update: boolean = false) {\r\n        const res = await this.saveAddressNative(this.d, update);\r\n\r\n        if (!res) {\r\n            this.d.continue = false;\r\n            this.d.savingOrder = false;\r\n            // this.showAddressForm();\r\n            return;\r\n        }\r\n        if (!update) {\r\n            this.d.address = res;\r\n            this.d.addresses.push(res);\r\n        } else {\r\n            this.d.addresses = [...this.d.addresses].map(x => {\r\n                if (x.id === this.d.address.id) {\r\n                    const obj = Object.assign({}, this.d.form);\r\n                    delete obj.userMail;\r\n                    obj.id = x.id;\r\n                    // @ts-ignore\r\n                    x = obj;\r\n                }\r\n                return x;\r\n            });\r\n        }\r\n        \r\n        this.d.hasErrors = false;\r\n        this.d.addressChecked = true;\r\n        this.d.continue = false;\r\n        if (this.d.form.check) {\r\n            // this.showTab(\"paymentMethod-tab\");\r\n        }\r\n        return res;\r\n    }\r\n\r\n    public storeOrder() {\r\n        if (this.d.savingOrder || !this.d.address.address) {\r\n            return;\r\n        }\r\n        this.d.savingOrder = true;\r\n\r\n        if (!this.d.form.userMail.length) {\r\n            // check if form userMail was reseted\r\n            // then assign to user saved email if logged in\r\n            this.d.form.userMail = this.d.userMail;\r\n        }\r\n\r\n        if (this.d.paymentMethod === \"accept\") {\r\n            const items: CartItemInterface[] = [...this.d.cart.items];\r\n            const address = this.d.form;\r\n            // get iframe uri\r\n            return Axios.post(\"/order/payment\", {\r\n                address,\r\n                userMail: this.d.form.userMail,\r\n                total: this.d.cart.total,\r\n                qty: this.d.cart.count,\r\n                paymentMethod: this.d.paymentMethod,\r\n                items\r\n            }).then(res => {\r\n                if (!res || !res.data || !res.data.uri) {\r\n                    this.d.savingOrder = false;\r\n                    this.error();\r\n                    return;\r\n                }\r\n\r\n                location.href = res.data.uri;\r\n                // this.d.savingOrder = false;\r\n            });\r\n        }\r\n\r\n        // save address first\r\n        this.d.form.check = false;\r\n        // check if address was selected then it was alwready saved\r\n        if (this.d.address.id) {\r\n            return this.saveOrder();\r\n        }\r\n        this.saveAddress()\r\n            .then(res => {\r\n                if (!res) return; \r\n                this.saveOrder();\r\n            })\r\n            .catch(err => {\r\n                // console.log(err.response);\r\n                this.d.savingOrder = false;\r\n            });\r\n    }\r\n\r\n    private async saveOrder() {\r\n        const items: CartItemInterface[] = [...this.d.cart.items];\r\n        // this.d.cart.items.forEach(x => {\r\n        //     items.push({\r\n        //         product_id: x.product_id,\r\n        //         instance: x.instance,\r\n        //         qty: x.qty,\r\n        //         size: x.size,\r\n        //         color: x.color,\r\n        //         price: x.price,\r\n        //         sub_total: x.sub_total,\r\n        //         // @ts-ignore\r\n        //         id: null\r\n        //     });\r\n        // });\r\n\r\n        const res = await Axios.post(\"/order\", {\r\n            address_id: this.d.address.id,\r\n            userMail: this.d.form.userMail,\r\n            total: this.d.cart.total,\r\n            qty: this.d.cart.count,\r\n            paymentMethod: this.d.paymentMethod,\r\n            items\r\n        });\r\n\r\n        if (!res || !res.data || res.status !== 200) {\r\n            this.d.savingOrder = false;\r\n            this.error();\r\n            return;\r\n        }\r\n\r\n        this.d.savingOrder = false;\r\n        this.d.order = res.data;\r\n        this.d.order.id = res.data.enc_id;\r\n        // clear cart list\r\n        this.d.cart.items.splice(0);\r\n        this.d.cart.total = 0;\r\n        this.d.cart.count = 0;\r\n\r\n        // go to current order id without reload\r\n        // window.history[\"pushState\"](\r\n        //     {\r\n        //         id: this.d.order.orderNum\r\n        //     },\r\n        //     document.title + `#${this.d.order.orderNum}`,\r\n        //     `/${this.lang()}/order/${this.d.order.orderNum}`\r\n        // );\r\n        this.success();\r\n    }\r\n\r\n    public showTab(tabId: string) {\r\n        const tab = document.getElementById(tabId) as HTMLLinkElement;\r\n        if (tab) {\r\n            // @ts-ignore\r\n            new Tab(tab, { height: true }).show();\r\n        }\r\n    }\r\n\r\n    // get resetFormObj(): AddressInterface {\r\n    //     return {\r\n    //         id: 0,\r\n    //         userMail: \"\",\r\n    //         firstName: \"\",\r\n    //         lastName: \"\",\r\n    //         address: \"\",\r\n    //         dep: \"\",\r\n    //         city: \"\",\r\n    //         country: \"\",\r\n    //         gov: \"\",\r\n    //         postCode: \"\",\r\n    //         phoneNumber: \"\",\r\n    //         notes: \"\"\r\n    //     };\r\n    // }\r\n\r\n    beforeMount() {\r\n        this.attachToGlobal(this, [\r\n            \"addAddress\",\r\n            \"updateOrder\",\r\n            \"selectAddress\",\r\n            \"addAddress\",\r\n            \"addOrderWithoutAddress\",\r\n            \"validateOnChange\",\r\n            \"showAddressForm\",\r\n            \"deleteAddress\",\r\n            \"showTab\",\r\n            \"storeOrder\"\r\n        ]);\r\n    }\r\n\r\n    mounted() {\r\n        this.$on(\"cartDone\", () => {\r\n            if (this.d.userId) {\r\n                // user logged in\r\n                this.loadAddresses();\r\n            } else {\r\n                this.d.showForm = true;\r\n                this.d.addressesLoader = [];\r\n            }\r\n        });\r\n\r\n        this.d.form.country = \"eg\";\r\n        this.d.form.gov = \"ca\";\r\n    }\r\n}\r\n"],"sourceRoot":""}