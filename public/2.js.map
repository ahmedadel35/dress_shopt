{"version":3,"sources":["webpack:///./resources/js/mixins/address-mixin.ts","webpack:///./resources/js/pages/order-ctrl.ts"],"names":["saveAddressNative","self","update","param","error","Object","assign","this","resetFormObj","method","uri","address","id","form","withTrans","res","status","hasErrors","data","errors","validateData","addressChecked","test","userMail","userId","phoneNumber","f","firstName","length","lastName","country","city","postCode","dep","gov","notes","AddressMixin","FormInpts","EmptyOrder","orderNum","user_id","address_id","total","qty","paymentMethod","paymentStatus","d","cart","items","wish","count","cartLoader","wishLoader","q","continue","order","updaingOrder","orderSuccess","addresses","addressesLoader","loadingAdresses","emptyAddressList","addingAddress","showForm","pageInx","scrollTop","deletingAddress","savingOrder","addAddress","saveAddress","then","r","success","check","loadAddresses","get","ads","selectAddress","adr","validateOnChange","showAddressForm","deleteAddress","delete","getLang","inx","findIndex","x","splice","map","obj","push","storeOrder","post","location","href","saveOrder","catch","err","enc_id","showTab","tabId","tab","document","getElementById","Tab","height","show","beforeMount","attachToGlobal","mounted","$on","OrderCtrl"],"mappings":"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","file":"2.js","sourcesContent":["import { Vue, Component, Prop, Watch } from \"vue-property-decorator\";\r\nimport Super from \"../pages/super\";\r\nimport { OrderCtrlData } from \"../pages/order-ctrl\";\r\nimport { UserCtrlData } from \"../pages/user-ctrl\";\r\nimport AddressInterface from \"../interfaces/address\";\r\nimport Axios from 'axios';\r\n\r\n@Component\r\nexport default class AddressMixin extends Super {\r\n    public async saveAddressNative(\r\n        self: OrderCtrlData | UserCtrlData,\r\n        update: boolean = false,\r\n        param: {withTrans?: boolean} = {}\r\n    ) {\r\n        self.error = Object.assign({}, this.resetFormObj);\r\n\r\n        const method = update ? \"patch\" : \"post\";\r\n        let uri = \"/address\";\r\n        if (update) {\r\n            uri += \"/\" + self.address.id;\r\n        }\r\n        \r\n        // @ts-ignore\r\n        self.form.withTrans = param.withTrans;\r\n\r\n        const res = await Axios[method](uri, self.form);\r\n        // console.log(self.form);\r\n        // console.log(res, res.status);\r\n        if (res && res.status === 422) {\r\n            self.hasErrors = true;\r\n            self.error = res.data.errors;\r\n            // console.log(self.error);\r\n            this.error();\r\n            return null;\r\n        }\r\n\r\n        if (!res || !res.data || res.status > 204) {\r\n            this.error();\r\n            return null;\r\n        }\r\n\r\n        return res.data;\r\n    }\r\n\r\n\r\n    public validateData(self: OrderCtrlData | UserCtrlData | any) {\r\n        self.addressChecked = false;\r\n\r\n        const re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        if (!re.test(self.form.userMail) && !self.userId) {\r\n            return true;\r\n        }\r\n\r\n        if (\r\n            /!\\(([0-9]{2}|0{1}((x|[0-9]){2}[0-9]{2}))\\)\\s*[0-9]{3,4}[- ]*[0-9]{4}/.test(\r\n                self.form.phoneNumber\r\n            )\r\n        ) {\r\n            return true;\r\n        }\r\n\r\n        // ckeck for length\r\n        const f = self.form;\r\n        const len =\r\n            f.firstName.length ||\r\n            f.lastName.length ||\r\n            f.address.length ||\r\n            f.country.length ||\r\n            f.city.length ||\r\n            f.postCode.length ||\r\n            f.phoneNumber.length;\r\n        if (!len) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    get resetFormObj(): AddressInterface {\r\n        return Object.assign({}, {\r\n            id: 0,\r\n            userMail: \"\",\r\n            firstName: \"\",\r\n            lastName: \"\",\r\n            address: \"\",\r\n            dep: \"\",\r\n            city: \"\",\r\n            country: \"\",\r\n            gov: \"\",\r\n            postCode: \"\",\r\n            phoneNumber: \"\",\r\n            notes: \"\"\r\n        });\r\n    }\r\n}\r\n","import { Component, Mixins } from \"vue-property-decorator\";\r\nimport Super from \"./super\";\r\nimport CartInterface from \"../interfaces/cart\";\r\nimport CartItemInterface from \"../interfaces/cart-item\";\r\nimport ProductInterface from \"../interfaces/product\";\r\nimport Axios from \"axios\";\r\nimport AddressInterface from \"../interfaces/address\";\r\nimport OrderInterface from \"../interfaces/order\";\r\nimport AddressMixin from \"../mixins/address-mixin\";\r\n\r\nexport interface Form {\r\n    id?: number;\r\n    userMail: string;\r\n    firstName: string;\r\n    lastName: string;\r\n    address: string;\r\n    dep: string;\r\n    city: string;\r\n    country: string;\r\n    gov: string;\r\n    postCode: string;\r\n    phoneNumber: string;\r\n    notes: string;\r\n    check?: boolean;\r\n}\r\n\r\nexport const FormInpts: AddressInterface = {\r\n    id: 0,\r\n    userMail: \"\",\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    address: \"\",\r\n    dep: \"\",\r\n    city: \"\",\r\n    country: \"\",\r\n    gov: \"\",\r\n    postCode: \"\",\r\n    phoneNumber: \"\",\r\n    notes: \"\"\r\n};\r\n\r\nexport const EmptyOrder: OrderInterface = {\r\n    id: 0,\r\n    orderNum: \"\",\r\n    user_id: 0,\r\n    userMail: \"\",\r\n    address_id: 0,\r\n    status: \"\",\r\n    total: 0,\r\n    qty: 0,\r\n    paymentMethod: \"\",\r\n    paymentStatus: false\r\n};\r\n\r\nexport interface OrderCtrlData {\r\n    cart: CartInterface;\r\n    cartLoader: boolean;\r\n    wishLoader: boolean;\r\n    q: string;\r\n    form: Form;\r\n    error: Form;\r\n    continue: boolean;\r\n    address: AddressInterface;\r\n    order: OrderInterface;\r\n    updaingOrder: boolean;\r\n    paymentMethod: string;\r\n    orderSuccess: boolean;\r\n    userId: number;\r\n    addresses: AddressInterface[];\r\n    addressesLoader: number[];\r\n    loadingAdresses: boolean;\r\n    emptyAddressList: boolean;\r\n    addingAddress: boolean;\r\n    showForm: boolean;\r\n    pageInx: number;\r\n    scrollTop: number;\r\n    hasErrors: boolean;\r\n    deletingAddress: boolean;\r\n    savingOrder: boolean;\r\n    addressChecked: boolean;\r\n    userMail: string;\r\n}\r\n\r\n@Component\r\nexport default class OrderCtrl extends Mixins(AddressMixin) {\r\n    public d: OrderCtrlData = {\r\n        cart: {\r\n            items: [],\r\n            wish: [],\r\n            count: -5,\r\n            total: 0\r\n        },\r\n        cartLoader: true,\r\n        wishLoader: true,\r\n        q: \"\",\r\n        form: FormInpts,\r\n        error: FormInpts,\r\n        continue: false,\r\n        address: FormInpts,\r\n        order: EmptyOrder,\r\n        updaingOrder: false,\r\n        paymentMethod: \"onDelivery\",\r\n        orderSuccess: false,\r\n        userId: 0,\r\n        addresses: [],\r\n        addressesLoader: [1, 2, 3, 4],\r\n        loadingAdresses: true,\r\n        emptyAddressList: false,\r\n        addingAddress: false,\r\n        showForm: false,\r\n        pageInx: 0,\r\n        scrollTop: 0,\r\n        hasErrors: false,\r\n        deletingAddress: false,\r\n        savingOrder: false,\r\n        addressChecked: false,\r\n        userMail: '',\r\n    };\r\n\r\n    public addAddress() {\r\n        this.d.hasErrors = this.validateData(this.d);\r\n        if (this.d.continue || this.d.hasErrors || this.d.order.id) {\r\n            return;\r\n        }\r\n        this.d.continue = true;\r\n\r\n        // check if user edited old address then update\r\n        if (this.d.address.id) {\r\n            this.saveAddress(true).then(r => {\r\n                this.success();\r\n            });\r\n            return;\r\n        }\r\n\r\n        // check for address validateion\r\n        this.d.form.check = true;\r\n        this.saveAddress().then(r => {\r\n            if (r) {\r\n                this.success();\r\n            }\r\n        });\r\n\r\n        // .then(res => {\r\n        //     this.d.continue = true;\r\n        //     this.saveOrder();\r\n        // });\r\n    }\r\n\r\n    public async loadAddresses() {\r\n        this.d.loadingAdresses = true;\r\n\r\n        const res = await Axios.get(`/user/${this.d.userId}/addresses`);\r\n\r\n        if (!res || !res.data || !res.data.ads) {\r\n            this.error();\r\n            this.d.loadingAdresses = false;\r\n            return;\r\n        }\r\n\r\n        this.d.form.userMail = res.data.userMail;\r\n        this.d.userMail = res.data.userMail;\r\n\r\n        if (!res.data.ads.length) {\r\n            this.d.emptyAddressList = true;\r\n            this.d.loadingAdresses = false;\r\n            return;\r\n        }\r\n\r\n        this.d.addressesLoader = [];\r\n        this.d.addresses = res.data.ads;\r\n        this.d.error = Object.assign({}, this.resetFormObj);\r\n        this.d.loadingAdresses = false;\r\n    }\r\n\r\n    public selectAddress(adr: AddressInterface) {\r\n        // console.log('selected');\r\n        this.d.error = Object.assign({}, this.resetFormObj);\r\n        this.d.form = Object.assign({}, adr);\r\n        this.d.address = adr;\r\n        this.d.addressChecked = true;\r\n    }\r\n\r\n    public validateOnChange() {\r\n        this.d.hasErrors = this.validateData(this.d);\r\n    }\r\n\r\n    public showAddressForm() {\r\n        this.d.form = Object.assign({}, this.resetFormObj);\r\n        this.d.address = Object.assign({}, this.resetFormObj);\r\n        this.d.showForm = true;\r\n    }\r\n\r\n    public deleteAddress() {\r\n        if (this.d.deletingAddress || !this.d.address.id) {\r\n            return;\r\n        }\r\n        this.d.deletingAddress = true;\r\n\r\n        Axios.delete(`/address/${this.d.address.id}`).then(res => {\r\n            if (!res || res.status !== 204) {\r\n                this.error(this.getLang(1), this.getLang(13));\r\n                this.d.deletingAddress = false;\r\n                return;\r\n            }\r\n\r\n            const inx = this.d.addresses.findIndex(\r\n                x => x.id === this.d.address.id\r\n            );\r\n            this.d.addresses.splice(inx, 1);\r\n            this.success();\r\n            this.d.deletingAddress = false;\r\n        });\r\n    }\r\n\r\n    public async saveAddress(update: boolean = false) {\r\n        const res = await this.saveAddressNative(this.d, update);\r\n\r\n        if (!res) {\r\n            this.d.continue = false;\r\n            this.d.savingOrder = false;\r\n            // this.showAddressForm();\r\n            return;\r\n        }\r\n        if (!update) {\r\n            this.d.address = res;\r\n            this.d.addresses.push(res);\r\n        } else {\r\n            this.d.addresses = [...this.d.addresses].map(x => {\r\n                if (x.id === this.d.address.id) {\r\n                    const obj = Object.assign({}, this.d.form);\r\n                    delete obj.userMail;\r\n                    obj.id = x.id;\r\n                    // @ts-ignore\r\n                    x = obj;\r\n                }\r\n                return x;\r\n            });\r\n        }\r\n        \r\n        this.d.hasErrors = false;\r\n        this.d.addressChecked = true;\r\n        this.d.continue = false;\r\n        if (this.d.form.check) {\r\n            // this.showTab(\"paymentMethod-tab\");\r\n        }\r\n        return res;\r\n    }\r\n\r\n    public storeOrder() {\r\n        if (this.d.savingOrder || !this.d.address.address) {\r\n            return;\r\n        }\r\n        this.d.savingOrder = true;\r\n\r\n        if (!this.d.form.userMail.length) {\r\n            // check if form userMail was reseted\r\n            // then assign to user saved email if logged in\r\n            this.d.form.userMail = this.d.userMail;\r\n        }\r\n\r\n        if (this.d.paymentMethod === \"accept\") {\r\n            const items: CartItemInterface[] = [...this.d.cart.items];\r\n            const address = this.d.form;\r\n            // get iframe uri\r\n            return Axios.post(\"/order/payment\", {\r\n                address,\r\n                userMail: this.d.form.userMail,\r\n                total: this.d.cart.total,\r\n                qty: this.d.cart.count,\r\n                paymentMethod: this.d.paymentMethod,\r\n                items\r\n            }).then(res => {\r\n                if (!res || !res.data || !res.data.uri) {\r\n                    this.d.savingOrder = false;\r\n                    this.error();\r\n                    return;\r\n                }\r\n\r\n                location.href = res.data.uri;\r\n                // this.d.savingOrder = false;\r\n            });\r\n        }\r\n\r\n        // save address first\r\n        this.d.form.check = false;\r\n        // check if address was selected then it was alwready saved\r\n        if (this.d.address.id) {\r\n            return this.saveOrder();\r\n        }\r\n        this.saveAddress()\r\n            .then(res => {\r\n                if (!res) return; \r\n                this.saveOrder();\r\n            })\r\n            .catch(err => {\r\n                // console.log(err.response);\r\n                this.d.savingOrder = false;\r\n            });\r\n    }\r\n\r\n    private async saveOrder() {\r\n        const items: CartItemInterface[] = [...this.d.cart.items];\r\n        // this.d.cart.items.forEach(x => {\r\n        //     items.push({\r\n        //         product_id: x.product_id,\r\n        //         instance: x.instance,\r\n        //         qty: x.qty,\r\n        //         size: x.size,\r\n        //         color: x.color,\r\n        //         price: x.price,\r\n        //         sub_total: x.sub_total,\r\n        //         // @ts-ignore\r\n        //         id: null\r\n        //     });\r\n        // });\r\n\r\n        const res = await Axios.post(\"/order\", {\r\n            address_id: this.d.address.id,\r\n            userMail: this.d.form.userMail,\r\n            total: this.d.cart.total,\r\n            qty: this.d.cart.count,\r\n            paymentMethod: this.d.paymentMethod,\r\n            items\r\n        });\r\n\r\n        if (!res || !res.data || res.status !== 200) {\r\n            this.d.savingOrder = false;\r\n            this.error();\r\n            return;\r\n        }\r\n\r\n        this.d.savingOrder = false;\r\n        this.d.order = res.data;\r\n        this.d.order.id = res.data.enc_id;\r\n        // clear cart list\r\n        this.d.cart.items.splice(0);\r\n        this.d.cart.total = 0;\r\n        this.d.cart.count = 0;\r\n\r\n        // go to current order id without reload\r\n        // window.history[\"pushState\"](\r\n        //     {\r\n        //         id: this.d.order.orderNum\r\n        //     },\r\n        //     document.title + `#${this.d.order.orderNum}`,\r\n        //     `/${this.lang()}/order/${this.d.order.orderNum}`\r\n        // );\r\n        this.success();\r\n    }\r\n\r\n    public showTab(tabId: string) {\r\n        const tab = document.getElementById(tabId) as HTMLLinkElement;\r\n        if (tab) {\r\n            // @ts-ignore\r\n            new Tab(tab, { height: true }).show();\r\n        }\r\n    }\r\n\r\n    // get resetFormObj(): AddressInterface {\r\n    //     return {\r\n    //         id: 0,\r\n    //         userMail: \"\",\r\n    //         firstName: \"\",\r\n    //         lastName: \"\",\r\n    //         address: \"\",\r\n    //         dep: \"\",\r\n    //         city: \"\",\r\n    //         country: \"\",\r\n    //         gov: \"\",\r\n    //         postCode: \"\",\r\n    //         phoneNumber: \"\",\r\n    //         notes: \"\"\r\n    //     };\r\n    // }\r\n\r\n    beforeMount() {\r\n        this.attachToGlobal(this, [\r\n            \"addAddress\",\r\n            \"updateOrder\",\r\n            \"selectAddress\",\r\n            \"addAddress\",\r\n            \"addOrderWithoutAddress\",\r\n            \"validateOnChange\",\r\n            \"showAddressForm\",\r\n            \"deleteAddress\",\r\n            \"showTab\",\r\n            \"storeOrder\"\r\n        ]);\r\n    }\r\n\r\n    mounted() {\r\n        this.$on(\"cartDone\", () => {\r\n            if (this.d.userId) {\r\n                // user logged in\r\n                this.loadAddresses();\r\n            } else {\r\n                this.d.showForm = true;\r\n                this.d.addressesLoader = [];\r\n            }\r\n        });\r\n\r\n        this.d.form.country = \"eg\";\r\n        this.d.form.gov = \"ca\";\r\n    }\r\n}\r\n"],"sourceRoot":""}